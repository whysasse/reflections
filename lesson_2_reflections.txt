What happens when you initialize a repository? Why do you need to do it?
	We initialize a repository to instruct git to create its .git directory and begin keeping track of files. 

How is the staging area different from the working directory and the repository? What value do you think it offers?
	It allows the developer to choose which files are going to be part of a specific commit. 

How can you use the staging area to make sure you have one commit per logical change?
	You add only the files related to that logical change to the staging area and then commit. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	Branches could be useful to experiment new features without changing the master code. Once the new feature is working, it can be merged to the master branch. 

How do the diagrams help you visualize the branch structure?
	They can help understand whit commits are part of a branch and how these commits are interconnected. Thus, I can see better where to create a branch or where to checkout. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	It's used to incorporate the changes made in parallel to the main code.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	Automatic merge simplifies a lot the merging process and in case of conflicts it allows the coder to solve them manually. 